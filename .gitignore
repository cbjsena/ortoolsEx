Django 프로젝트 .gitignore 설정 가이드Git으로 프로젝트 버전을 관리할 때, 모든 파일을 추적할 필요는 없습니다. 각 개발자의 로컬 환경에 따라 달라지거나, 자동으로 생성되거나, 민감한 정보를 포함하는 파일들은 저장소(repository)에 포함하지 않는 것이 좋습니다. 이를 위해 프로젝트의 루트 디렉토리(가장 상위 폴더, manage.py 파일이 있는 위치)에 .gitignore 라는 이름의 파일을 만들고, 버전 관리에서 제외할 파일이나 폴더의 패턴을 나열합니다.일반적인 .gitignore 내용 예시:# Python #
###########
# 가상 환경 폴더 (이름이 venv, .venv 등일 수 있음)
venv/
.venv/
secrets/
*.env
.env.*
test_data/
# Python 캐시 파일 및 컴파일된 파일
__pycache__/
*.py[cod]
*$py.class

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Django #
##########
# 로컬 데이터베이스 파일 (개발용 SQLite)
*.sqlite3
db.sqlite3
db.sqlite3-journal

# 로그 파일
*.log

# 미디어 파일 (사용자 업로드 파일)
media/

# 정적 파일 (collectstatic으로 수집된 파일)
staticfiles/
static_root/

# 임시/생성 파일 (예: 이전 코드의 CSV 출력 폴더)
temp_csvs/


# IDE / Editor #
################
# PyCharm
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# OS generated files #
####################
.DS_Store
Thumbs.db


# Secrets / Credentials #
#########################
# !! 매우 중요: 비밀 키, API 키, 인증서 파일 등은 절대 커밋하지 마세요 !!
# Secrets / Credentials
secrets/
*.env
.env

# Google API 인증 정보 파일 예시 (실제 파일 이름 패턴 사용)
creden_*.json
token_*.json
client_secrets.json # 등등 구체적인 파일명 명시 권장

# 다른 비밀 정보 파일 패턴
secrets.*
credentials.*
*.pem
*.key
